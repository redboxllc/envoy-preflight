name: CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Secrets
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "ai-services-dev"
          secrets: "acrUsername, acrPassword"
        id: kv

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKER_REPOSITORY }}

      # Build and test binary
      - name: Build and Test Binary
        env:
          CGO_ENABLED: 0
        run: |
          go mod download
          go test -test.timeout 30s 
          GOOS=linux GOARCH=amd64 go build -o build/linux/amd64/scuttle -ldflags="-X 'main.Version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}'"
          
      - name: Login to Docker
        uses: docker/login-action@v1 
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ steps.kv.outputs.acrUsername }}
          password: ${{ steps.kv.outputs.acrPassword }}

      # Build Docker image
      # On tag, push Docker image
      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}

      # On tag, Pack zip of scuttle for GitHub Release
      - name: Pack
        run: |
          mkdir build/artifacts 
          zip -r -j build/artifacts/scuttle-linux-amd64.zip build/linux/amd64/
        if: startsWith(github.ref, 'refs/tags/')
        
      # On tag, Create GitHub Release
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/artifacts/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
